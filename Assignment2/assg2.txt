# set working directory
setwd("d:/workspace/FINA5250/Assignment2")

# estimate with normal distribution
est_norm_params <- function(series) {
  mean <- mean(series)
  sd <- sd(series)
  return(c(mean, sd))
}

# estimate with cauchy distribution
est_cauchy_params <- function(series) {
  m <- median(series)
  # estimate lambda with half the interquartile range
  lambda <- 0.5 * (quantile(series, 0.75) - quantile(series, 0.25))
  return(c(m, lambda))
}

# compute VaR
# method = {"emp", "norm", "cauchy"}
VaR <- function(series, q, method = "emp") {
  if (method == "emp") {
    # add negative sign to make VaR positive
    return(- quantile(series, q))
  } else if (method == "norm") {
    params <- est_norm_params(series)
    return(- qnorm(q, params[1], params[2]))
  } else if (method == "cauchy") {
    params <- est_cauchy_params(series)
    return(- qcauchy(q, params[1], params[2]))
  } else {
    cat("Invalid method of estimating VaR")
    return(NULL)
  }
}

ES <- function(series, q, method = "emp") {
  if (method == "emp") {
    # add negative sign to make ES negative
    return(- mean(series[series < -VaR(series, q, method)]))
  } else if (method == "norm") {
    params <- est_norm_params(series)
    s_norm <- rnorm(1000 / q, params[1], params[2])
    return(- mean(s_norm[s_norm < -VaR(s_norm, q, method)]))
  } else if (method == "cauchy") {
    params <- est_cauchy_params(series)
    s_cauchy <- rcauchy(1000 / q, params[1], params[2])
    return(- mean(s_cauchy[s_cauchy < -VaR(s_cauchy, q, method)]))
  } else {
    cat("Invalid method of estimating ES")
    return(NULL)
  }
}

# load data
DHSI <- read.table("DHSI-1.csv", header = TRUE, sep = ",")
# extract daily close price
DHSI_close <- DHSI$Close
# compute log returns
DHSILR <- diff(log(DHSI_close))

q_list <- c(0.01, 0.001)
for (q in q_list) {
  cat(sprintf("VaR(q=%s) = %s\n", q, VaR(DHSILR, q, "norm")))
  cat(sprintf("ES(q=%s) = %s\n", q, ES(DHSILR, q, "norm")))
}

par(mfrow = c(1,1))
qqnorm(DHSILR, main = "Empirical QQ plot for DHSILR vs N(0,1)",
       xlab = "N(0,1) quantitles", ylab = "DHSILR quantiles")

q_list <- c(0.01, 0.001)
for (q in q_list) {
  cat(sprintf("VaR(q=%s) = %s\n", q, VaR(DHSILR, q, "emp")))
  cat(sprintf("ES(q=%s) = %s\n", q, ES(DHSILR, q, "emp")))
}
